# Generated by Django 4.1.7 on 2023-04-12 21:52

import card.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Nom')),
            ],
            options={
                'verbose_name': 'Environnement',
                'verbose_name_plural': 'Environnements',
            },
        ),
        migrations.CreateModel(
            name='Prey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Nom')),
            ],
            options={
                'verbose_name': 'Proie',
                'verbose_name_plural': 'Proies',
            },
        ),
        migrations.CreateModel(
            name='ReproductionPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Venom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Nom')),
                ('effects', models.TextField()),
            ],
            options={
                'verbose_name': 'Toxicologie',
                'verbose_name_plural': 'Toxicologies',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genus', models.CharField(help_text='Genre', max_length=64, verbose_name='Genre')),
                ('species', models.CharField(help_text='espèce sous-espèce', max_length=64, verbose_name='Espèce')),
                ('dentition', models.CharField(choices=[('A', 'Aglyphe'), ('O', 'Opistoglyphe'), ('P', 'Proteroglyphe'), ('S', 'Solénoglyphe')], default='A', max_length=1, verbose_name='Dentition')),
                ('adult_male_size', models.PositiveIntegerField(help_text='en cm', verbose_name='Taille adulte mâle')),
                ('adult_female_size', models.PositiveIntegerField(help_text='en cm', verbose_name='Taille adulte femelle')),
                ('is_cites', models.BooleanField(verbose_name='Enregistré au CITES')),
                ('annex_cites', models.PositiveIntegerField(blank=True, default=0, help_text='0 = rien', verbose_name='Annexe CITES')),
                ('distribution', models.CharField(help_text="Pays où se trouvent l'espèce", max_length=512, verbose_name='Distribution')),
                ('comments', models.TextField(help_text='Maximum 500 caractères', max_length=500, verbose_name='Commentaire')),
                ('reproduction_type', models.CharField(choices=[('O', 'Ovipare'), ('V', 'Vivipare'), ('I', 'Ovovivipare')], help_text='Type de reproduction', max_length=1, verbose_name='Type de reproduction')),
                ('born_size', models.PositiveIntegerField(help_text='Taille en cm', verbose_name='Taille des juvéniles')),
                ('main_mores', models.CharField(choices=[('B', 'Fouisseur'), ('T', 'Terrestre'), ('S', 'Semi-arboricole'), ('A', 'Arboricole')], help_text='Moeurs', max_length=1, verbose_name='Moeurs')),
                ('main_activity_period', models.CharField(choices=[('N', 'Nocturne'), ('T', 'Crépusculaire'), ('D', 'Diurne')], help_text="Période principale d'activité", max_length=1, verbose_name="Période d'activité")),
                ('venom_risks', models.CharField(blank=True, choices=[('F', 'Faible toxicité'), ('R', 'Nécessite une surveillance active'), ('S', 'Hospitalisation immédiate recommandée'), ('D', 'Hospitalisation immédiate (risque de décès)')], help_text="Dangerosité d'une envenimation", max_length=1, verbose_name='niveau de toxicité')),
                ('behavior', models.CharField(choices=[('F', 'Fuyard'), ('P', 'Placide'), ('C', 'Démonstratif'), ('I', 'Irrascible')], help_text="Caractère principal en période d'activité", max_length=1, verbose_name='Caractère')),
                ('dangerosity', models.CharField(choices=[('I', 'Innofensif'), ('C', 'Pouvant entraîner des dommages'), ('H', 'Dangereux'), ('V', 'Extrêmenent dangereux')], help_text='Dangerosité en cas de morsure', max_length=1, verbose_name='Dangerosité')),
                ('temperature_high', models.PositiveIntegerField(help_text='Moyenne haute', verbose_name='Température point chaud')),
                ('temperature_low', models.PositiveIntegerField(help_text='Moyenne basse', verbose_name='Température point froid')),
                ('humidity', models.PositiveIntegerField(help_text='Humidité moyenne en %', verbose_name='Humidité')),
                ('minimal_vivarium_size', models.CharField(help_text='LxlxH en cm', max_length=11, verbose_name='Dimension minimale du terrarium')),
                ('detention_difficulty', models.CharField(choices=[('S', 'Pour éleveur débutant (premier serpent)'), ('E', 'Pour éleveur ayant déjà une base'), ('H', 'Pour éleveur expérimenté'), ('V', 'Pour éleveur très expérimenté')], help_text="Pour maintenir l'espèce ou la manipuler", max_length=1, verbose_name='Difficulté de maintien')),
                ('image', models.ImageField(upload_to=card.models.card_directory_path)),
                ('slug', models.SlugField(unique=True)),
                ('approved', models.BooleanField(null=True, verbose_name='Approuvé')),
                ('environments', models.ManyToManyField(help_text='Milieux de vie', to='card.environment', verbose_name='Environnements')),
                ('preys', models.ManyToManyField(help_text='Proies', to='card.prey', verbose_name='Proies')),
                ('reproduction_period', models.ManyToManyField(help_text='Période de reproduction', to='card.reproductionperiod', verbose_name='Période de reproduction')),
                ('venom', models.ManyToManyField(help_text='Venin(s)', to='card.venom', verbose_name='Est venimeux')),
            ],
            options={
                'verbose_name': 'Serpent',
                'verbose_name_plural': 'Serpents',
            },
        ),
        migrations.CreateModel(
            name='Amphibian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(choices=[('U', 'Urodèle'), ('A', 'Anoure')], max_length=1, verbose_name='Famille')),
                ('genus', models.CharField(help_text='Genre', max_length=64, verbose_name='Genre')),
                ('species', models.CharField(help_text='espèce sous-espèce', max_length=64, verbose_name='Espèce')),
                ('adult_male_size', models.PositiveIntegerField(help_text='en cm', verbose_name='Taille adulte mâle')),
                ('adult_female_size', models.PositiveIntegerField(help_text='en cm', verbose_name='Taille adulte femelle')),
                ('is_cites', models.BooleanField(default=True, verbose_name='Enregistré au CITES')),
                ('annex_cites', models.PositiveIntegerField(blank=True, default=2, help_text='0 = rien', verbose_name='Annexe CITES')),
                ('distribution', models.CharField(help_text="Pays où se trouvent l'espèce", max_length=512)),
                ('comments', models.TextField(help_text='Maximum 500 caractères', max_length=500, verbose_name='Commentaire')),
                ('main_mores', models.CharField(choices=[('B', 'Fouisseur'), ('T', 'Terrestre'), ('A', 'Arboricole')], help_text='Moeurs', max_length=1, verbose_name='Moeurs')),
                ('main_activity_period', models.CharField(choices=[('N', 'Nocturne'), ('T', 'Crépusculaire'), ('D', 'Diurne')], help_text='Période principale', max_length=1, verbose_name="Période d'activité")),
                ('temperature_high', models.PositiveIntegerField(help_text='Moyenne haute', verbose_name='Température point chaud')),
                ('temperature_low', models.PositiveIntegerField(help_text='Moyenne basse', verbose_name='Température point froid')),
                ('humidity', models.PositiveIntegerField(help_text='Humidité moyenne en %', verbose_name='Humidité')),
                ('can_swim', models.BooleanField(verbose_name='Espèce nageuse')),
                ('aquatic_sp', models.BooleanField(verbose_name='Espèce aquatique')),
                ('can_live_in_group', models.BooleanField(verbose_name='Peut vivre en groupe')),
                ('minimal_vivarium_size', models.CharField(help_text='LxlxH en cm', max_length=11, verbose_name='Dimension minimale du terrarium')),
                ('detention_difficulty', models.CharField(choices=[('S', 'Pour éleveur débutant (premier serpent)'), ('E', 'Pour éleveur ayant déjà une base'), ('H', 'Pour éleveur expérimenté'), ('V', 'Pour éleveur très expérimenté')], help_text="Pour maintenir l'espèce ou la manipuler", max_length=1, verbose_name='Difficulté de maintien')),
                ('image', models.FileField(upload_to=card.models.amphibian_directory_path)),
                ('slug', models.SlugField(unique=True)),
                ('approved', models.BooleanField(null=True, verbose_name='Approuvé')),
                ('environments', models.ManyToManyField(help_text='Milieux de vie', to='card.environment', verbose_name='Environnements')),
                ('preys', models.ManyToManyField(help_text='Proies', to='card.prey', verbose_name='Proies')),
                ('reproduction_period', models.ManyToManyField(help_text='Période de reproduction', to='card.reproductionperiod', verbose_name='Période de reproduction')),
            ],
            options={
                'verbose_name': 'Amphibien',
                'verbose_name_plural': 'Amphibiens',
            },
        ),
    ]
